apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-deploy
  namespace: chat
spec:
  selector:
    matchLabels:
      app: chat
  template:
    metadata:
      labels:
        app: chat
    spec:
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/pivot_studio/pivot-chat:latest
          imagePullPolicy: Always
          name: chat
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu:  100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
            - name: chat
              mountPath: /etc/chat
      volumes:
        - name: chat
          configMap:
            name: chat
---
apiVersion: v1
kind: Service
metadata:
  namespace: chat
  name: chat-service
  labels:
    app: chat
spec:
  ports:
    - port: 80
      targetPort: 8080
      name: http
  selector:
    app: chat
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: chat
  name: gateway
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # 开启use-regex，启用path的正则匹配
    nginx.ingress.kubernetes.io/use-regex: "true"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # ratelimit
    nginx.ingress.kubernetes.io/limit-connections: "60"
    nginx.ingress.kubernetes.io/limit-rps: "60"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # 跨域
    nginx.ingress.kubernetes.io/cors-allow-headers: >-
      DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
    nginx.ingress.kubernetes.io/cors-allow-methods: 'PUT, GET, POST, OPTIONS'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    # ws需要
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade "websocket";
      proxy_set_header Connection "Upgrade";
    
spec:
  rules:
    - host: chat.pivotstudio.cn
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chat-service
                port:
                  number: 80

  tls:
    - hosts:
        - chat.pivotstudio.cn
      secretName: pivot-tls-cert